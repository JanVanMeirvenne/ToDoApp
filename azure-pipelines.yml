# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  ASPNETCORE_ENVIRONMENT: 'Production'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    configuration: $(buildConfiguration)
    projects: '**/ToDoApp.Api.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    configuration: $(buildConfiguration)
    projects: '**/ToDoApp.Api.csproj'
    publishWebProjects: False
    arguments: '--runtime win-x86 --self-contained --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\api'
    zipAfterPublish: False

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    configuration: $(buildConfiguration)
    projects: '**/ToDoApp.Ui.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    configuration: $(buildConfiguration)
    projects: '**/ToDoApp.Ui.csproj'
    publishWebProjects: False
    arguments: '--runtime win-x86 --self-contained --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\ui'
    zipAfterPublish: True
    
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(build.artifactstagingdirectory)\api'
    artifact: 'api'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  inputs:
   targetPath: '$(build.artifactstagingdirectory)\ui'
   artifact: 'web'
   publishLocation: 'pipeline'